version: '3.8'

services:
  # Redis service
  redis:
    image: redis:7-alpine
    container_name: garimpeiro_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./config/redis.production.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Main application
  app:
    build: .
    container_name: garimpeiro_app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - DEBUG_MODE=false
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config:/app/config
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Telegram bot
  bot:
    build: .
    container_name: garimpeiro_bot
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - DEBUG_MODE=false
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    depends_on:
      redis:
        condition: service_healthy
    command: ["python", "-m", "src.telegram_bot.bot"]

  # Dashboard
  dashboard:
    build: .
    container_name: garimpeiro_dashboard
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - DEBUG_MODE=false
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    depends_on:
      redis:
        condition: service_healthy
    command: ["python", "-m", "src.dashboard.conversion_dashboard"]

  # Scheduler
  scheduler:
    build: .
    container_name: garimpeiro_scheduler
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - DEBUG_MODE=false
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    depends_on:
      redis:
        condition: service_healthy
    command: ["python", "-m", "src.app.scheduler.cron_manager"]

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: garimpeiro_network
