#!/usr/bin/env python3
"""
Teste Detalhado de Execu√ß√£o da Aplica√ß√£o Flet
Verifica se h√° erros em tempo de execu√ß√£o
"""

import subprocess
import time


def test_flet_execution():
    """Testa execu√ß√£o da aplica√ß√£o Flet"""
    try:
        print("üîç Testando execu√ß√£o da aplica√ß√£o Flet...")

        # Executa a aplica√ß√£o usando o comando flet correto
        process = subprocess.Popen(
            ["flet", "run", "app_flet_fixed.py"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True,
        )

        # Aguarda um pouco para ver se h√° erros imediatos
        time.sleep(5)

        # Verifica se o processo ainda est√° rodando
        if process.poll() is None:
            print("‚úÖ Aplica√ß√£o Flet iniciou sem erros imediatos")

            # Para o processo
            process.terminate()
            try:
                process.wait(timeout=5)
            except subprocess.TimeoutExpired:
                process.kill()

            return True
        else:
            # Processo terminou, verifica sa√≠da
            stdout, stderr = process.communicate()
            if stderr:
                print(f"‚ùå Erro na execu√ß√£o: {stderr}")
                return False
            else:
                print("‚úÖ Aplica√ß√£o executou sem erros")
                return True

    except Exception as e:
        print(f"‚ùå Erro ao testar execu√ß√£o: {e}")
        return False


def test_file_content():
    """Testa conte√∫do do arquivo para problemas"""
    try:
        print("\nüîç Verificando conte√∫do do arquivo...")

        with open("app_flet_fixed.py", "r", encoding="utf-8") as f:
            content = f.read()

        # Verifica se h√° problemas conhecidos
        problems = []

        # Verifica se h√° refer√™ncias problem√°ticas
        if "ft.colors.PRIMARY" in content:
            problems.append("ft.colors.PRIMARY ainda presente")
        if "ft.colors.SURFACE_VARIANT" in content:
            problems.append("ft.colors.SURFACE_VARIANT ainda presente")
        if "ft.colors.OUTLINE" in content:
            problems.append("ft.colors.OUTLINE ainda presente")

        if problems:
            print(f"‚ö†Ô∏è Problemas encontrados: {problems}")
            return False
        else:
            print("‚úÖ Nenhum problema conhecido encontrado no c√≥digo")
            return True

    except Exception as e:
        print(f"‚ùå Erro ao verificar arquivo: {e}")
        return False


def test_flet_version():
    """Testa vers√£o do Flet"""
    try:
        print("\nüîç Verificando vers√£o do Flet...")

        # Verifica vers√£o via pip
        result = subprocess.run(["pip", "show", "flet"], capture_output=True, text=True)

        if result.returncode == 0:
            for line in result.stdout.split("\n"):
                if line.startswith("Version:"):
                    version = line.split(":")[1].strip()
                    print(f"‚úÖ Flet vers√£o: {version}")
                    break

        # Verifica se ft.Colors est√° dispon√≠vel
        import flet as ft

        if hasattr(ft, "Colors"):
            print("‚úÖ ft.Colors dispon√≠vel")
            return True
        else:
            print("‚ö†Ô∏è ft.Colors n√£o dispon√≠vel nesta vers√£o")
            return False

    except Exception as e:
        print(f"‚ùå Erro ao verificar vers√£o: {e}")
        return False


def main():
    """Fun√ß√£o principal de teste"""
    print("üöÄ TESTE DETALHADO DE EXECU√á√ÉO - APLICA√á√ÉO FLET")
    print("=" * 60)

    # Testa vers√£o do Flet
    version_ok = test_flet_version()

    # Testa conte√∫do do arquivo
    content_ok = test_file_content()

    # Testa execu√ß√£o
    execution_ok = test_flet_execution()

    print("\n" + "=" * 60)

    if version_ok and content_ok and execution_ok:
        print("üéâ TODOS OS TESTES PASSARAM!")
        print("‚úÖ Aplica√ß√£o Flet est√° funcionando perfeitamente")
    else:
        print("‚ùå ALGUNS TESTES FALHARAM")
        print("‚ö†Ô∏è Verifique os problemas identificados acima")

    print("\nüí° Para executar manualmente:")
    print("   flet run app_flet_fixed.py")


if __name__ == "__main__":
    main()
