# typings/flet/__init__.pyi
from typing import Any, Callable, List, Optional, Union
from .core import Control
from .core import (
    SnackBar,
    Border,
)
from .core import (
    FontWeight,
    MainAxisAlignment,
    CrossAxisAlignment,
)
from .core import ScrollMode, ThemeMode, ControlState

class Page:
    title: str
    theme_mode: Optional[ThemeMode]
    scroll: Optional[ScrollMode]
    padding: Optional[Union[int, float]]
    controls: List[Control]
    snack_bar: Optional[SnackBar]

    def update(self) -> None: ...
    def add(self, *controls: Control) -> None: ...
    def clear(self) -> None: ...

    # Métodos opcionais (podem não existir em todas as versões)
    def call_from_thread(
        self, fn: Callable[..., Any], *args: Any, **kwargs: Any
    ) -> Any: ...
    def invoke(self, fn: Callable[..., Any], *args: Any, **kwargs: Any) -> Any: ...

class Application:
    def __init__(self, **kwargs: Any) -> None: ...
    def run_polling(self, **kwargs: Any) -> None: ...
    def initialize(self) -> None: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def shutdown(self) -> None: ...

class ApplicationBuilder:
    def token(self, token: str) -> ApplicationBuilder: ...
    def build(self) -> Application: ...

def app(target: Callable[[Page], None], **kwargs: Any) -> None: ...

# Constantes
class ThemeMode:
    DARK: str
    LIGHT: str

class ScrollMode:
    AUTO: str

class ControlState:
    DEFAULT: str

class FontWeight:
    W_600: str
    W_700: str

class MainAxisAlignment:
    CENTER: str
    SPACE_BETWEEN: str

class CrossAxisAlignment:
    CENTER: str

# Funções de border
def border(*args: Any, **kwargs: Any) -> Border: ...
