"""
Script para testar a conectividade com a API do Telegram.
"""
import os
import logging
import requests
from dotenv import load_dotenv

# Configura√ß√£o de logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def test_telegram_connection():
    """Testa a conex√£o com a API do Telegram."""
    # Carrega as vari√°veis de ambiente
    load_dotenv()
    
    # Obt√©m o token do bot
    token = os.getenv('TELEGRAM_BOT_TOKEN')
    if not token:
        logger.error("Token do bot n√£o encontrado. Verifique a vari√°vel de ambiente TELEGRAM_BOT_TOKEN.")
        return False
    
    # URL da API do Telegram para obter informa√ß√µes do bot
    url = f"https://api.telegram.org/bot{token}/getMe"
    
    try:
        logger.info(f"Testando conex√£o com a API do Telegram...")
        logger.info(f"URL da requisi√ß√£o: {url}")
        
        # Faz a requisi√ß√£o para a API do Telegram
        response = requests.get(url, timeout=10)
        
        # Verifica se a requisi√ß√£o foi bem-sucedida
        if response.status_code == 200:
            data = response.json()
            if data.get('ok') and data.get('result'):
                bot_info = data['result']
                logger.info(f"‚úÖ Conex√£o com a API do Telegram bem-sucedida!")
                logger.info(f"ü§ñ Nome do bot: {bot_info.get('first_name')}")
                logger.info(f"üë§ Nome de usu√°rio: @{bot_info.get('username')}")
                logger.info(f"üÜî ID do bot: {bot_info.get('id')}")
                return True
            else:
                logger.error(f"‚ùå Erro na resposta da API: {data}")
        else:
            logger.error(f"‚ùå Erro na requisi√ß√£o: {response.status_code} - {response.text}")
    
    except requests.exceptions.RequestException as e:
        logger.error(f"‚ùå Erro na conex√£o com a API do Telegram: {e}")
    
    return False

if __name__ == "__main__":
    test_telegram_connection()
